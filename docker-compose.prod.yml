# Production

version: "3.7"
services:
  postgres:
    image: postgres:12
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - 5432:5432
    volumes:
      - postgresdb:/var/lib/postgresql/data:z
    restart: always

  web:
    container_name: web
    build:
      context: ./web
      dockerfile: Dockerfile
    depends_on:
      - postgres
    environment:
      - DATABASE_URL=${DATABASE_URL}
    ports:
      - "5000"
    volumes:
      - ./web:/web:z
    restart: always

  proxy:
    image: nginx:1.16.0-alpine
    container_name: reverse_proxy
    depends_on: 
      - web
      - client
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/nginx.conf
      - ./proxy/error.log:/etc/nginx/error_log.log
      - ./proxy/cache/:/etc/nginx/cache
      - ./proxy/cert/:/etc/cert/
      - ./proxy/ssl-key-pwd.lock/:/etc/keys/ssl-key-pwd
    ports:
      - 80:80
      - 443:443

  etl:
    build:
      context: ./etl
      dockerfile: Dockerfile
    depends_on:
      - web
      - postgres
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - PYTHONDONTWRITEBYTECODE=1
    volumes:
      - ./etl:/etl:z

  # Client is being served by netlify
  client: 
    container_name: client
    build: 
      context: ./client
      dockerfile: Dockerfile
    depends_on:
      - web
    env_file:
      - .env
    ports: 
      - "80"
    volumes:
      - './client:/app:z'
      - '/client/node_modules'

volumes:
  postgresdb:
    name: "postgresdb"
